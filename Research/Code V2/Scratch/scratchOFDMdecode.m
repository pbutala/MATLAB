close all;
clearvars;
clc;

N = 16; % # subcarriers
M = 4; % M-QAM for each subcarrier
Syms = getQAMsyms(M); % show the constellation
% data = [1:4 4:-1:1 2];
data = randi(M,[7 1]);
% FOR DCO/DMT ADD OFFSET TO REDUCE ERRORS FROM NEGATIVE CLIPPING
[tSigDco,tSigM,fSigM] = genOFDMsignal(... % Variable Arguments to the function
    'data',data,...          
    'OFDMtype','DMT',...    
    'N',N,...
    'Symbols',Syms,...
    'Scale',1,...
    'Offset',0,...
    'OffsetDcoStddev', 2);                               
% figure;
% stem(1:numel(tSigDco),tSigDco);
% title('Example ACO-OFDM signal');
% xlabel('time');
% ylabel('signal intensity');

[tDatV] = decodeOFDMsignal(tSigDco,...
    'OFDMtype','DMT',...    
    'N',N,...
    'Symbols',Syms,...
    'Scale',1);

display(tDatV);