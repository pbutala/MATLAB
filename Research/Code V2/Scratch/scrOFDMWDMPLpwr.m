% scrOFDMWDMPL
% script to plot data generated by scrOFDMWDMPL
% function scrOFDMWDMPL(dataFile)
if ~exist('ctFileVars','var')
    error('Data file not specified');
end
if (exist('hWB','var')&& ishandle(hWB))
    delete(hWB);
end

close all;
clearvars -except ctFileVars;
clc;
load(ctFileVars);                                                             % LOAD DATA

% DEFAULT COSMETIC SETTINGS
dlinelw = get(0,'DefaultLineLineWidth');
set(0,'DefaultLineLineWidth',2);
daxesfontname = get(0,'DefaultAxesFontName');
set(0,'DefaultAxesFontName','Helvetica');
% daxesfontsize = get(0,'DefaultAxesFontSize');
% set(0,'DefaultAxesFontSize',16);
dfigvis = get(0,'DefaultFigureVisible');
set(0,'DefaultFigureVisible','On');
dfigppm = get(0,'DefaultFigurePaperPositionMode');
set(0,'DefaultFigurePaperPositionMode','Manual');
dfigpu = get(0,'DefaultFigurePaperUnits');
set(0,'DefaultFigurePaperUnits','Inches');
dfigpp = get(0,'DefaultFigurePaperPosition');
set(0,'DefaultFigurePaperPosition',[0 0 11 8.5]);
dlinems = get(0,'DefaultLineMarkerSize');
set(0,'DefaultLineMarkerSize',8);
FIGTITLE = 'Off';

%% PLOT
% PLOT Configs
PLOTDMIN = 5;
PLACOLC = 'm'; PLACOLS = '-'; PLACOMK = 'o';
PLDCOLC = 'c'; PLDCOLS = '-'; PLDCOMK = 'd';
PLTXLCS = {'r';'g';'b'}; PLTXLSS = {'--';'-.';':'}; PLTXMKS = {'>';'s';'*'};
PLNSCMKS = {'x';'h';'^';'+';'v';'*';'<';'p'};

% Figure CCT config
FIGCCTPLNC = ceil(sqrt(LENCCTPL));
FIGCCTPLNR = ceil(LENCCTPL/FIGCCTPLNC);
FIGLDAMIN = 400; FIGLDAMAX = 800;
% Figure BER vs SNR config
FIGBERPLNR = ceil(sqrt(LENOFDMTYPES));
FIGBERPLNC = ceil(LENOFDMTYPES/FIGBERPLNR);
FIGBERXMIN = RNGSNRMIN; FIGBERXMAX = RNGSNRMAX;
FIGBERYMIN = 0.9*BERTH; FIGBERYMAX = 1;
FIGBERLGD = {};
HBERLGD = [];
switch FLTTYPE
    case FILTERTYPE.GAUSSIAN
        STRFLTTYP = 'Gaussian';
        STRFLTWID = 'SD';
    case FILTERTYPE.LORENTZIAN
        STRFLTTYP = 'Lorentzian';
        STRFLTWID = 'FWHM';
end

for iTsd = 1:LENLEDSD                                                       % LOOP START LED SD
    if LENCCTPL > 1
        FIGPWR(iTsd) = figure('Name',sprintf('POWER vs CCT'),'NumberTitle',FIGTITLE);
        iTPL = 1;
        for iT = 1:LENCCT                                                           % LOOP START CCT
            if RNGCCT(iT) == RNGCCTPL(iTPL)                                         % If CCT selected for plot
                [x,y] = planckXY(RNGCCT(iT));
                [S,R,G,B,tr,tg,tb] = RGBLED(iTsd).getPSD(x,y);                               % Get PSDs at CCT
                
                Rfl(iTsd,iT) = R.rdFlux;
                Gfl(iTsd,iT) = G.rdFlux;
                Bfl(iTsd,iT) = B.rdFlux;
                Sfl(iTsd,iT) = S.rdFlux;
                iTPL = iTPL+1;
            end
        end
        plot(RNGCCTPL,Rfl(iTsd,:),PLTXLCS{1});                % Plot RED SPD
        hold on;
        plot(RNGCCTPL,Gfl(iTsd,:),PLTXLCS{2});                % Plot GREEN SPD
        plot(RNGCCTPL,Bfl(iTsd,:),PLTXLCS{3});                % Plot BLUE SPD
        plot(RNGCCTPL,Sfl(iTsd,:),'k');                % Plot WHITE SPD
        axis([RNGCCTPL(1) RNGCCTPL(end) 0 1.1]);
        xlabel('Correlated Color Temperature (K)');
        ylabel('Relative Radiant Flux (W)');
    end
end





































































